service firebase.storage {
  match /b/{bucket}/o {
    function userPrivilege(groupId, userId) {
      // Note: This uses the custom token.
      return request.auth.token.privileges[groupId];
    }
    function isUserAdmin(groupId, userId) {
      return userPrivilege(groupId, userId) >= 16777216; // 0x1000000
    }
    function isUserOwner(groupId, userId) {
      return exists(/databases/$(database)/documents/groups/$(groupId)/owners/$(userId));
    }
    function isUserMember(groupId, userId) {
      //return exists(/databases/$(database)/documents/groups/$(groupId)/members/$(userId));
      return userPrivilege(groupId, userId) >= 1; // 0x1
    }

    match /groups/{groupId}/articles/{articleId}/{imageId} {
      allow write: if isUserMember(groupId, request.auth.uid)
        && request.resource.size < 10 * 1024 * 1024
        && request.resource.contentType in ['image/png', 'image/gif', 'image/jpeg'];
      allow read;
    }
    match /groups/{groupId}/images/{imageId} {
      allow write: if isUserAdmin(groupId, request.auth.uid);
      allow read;
    }
    match /groups/{groupId}/members/{userId}/images/{imageId} {
      allow write: if request.auth.uid == userId;
      allow read;
    }
    match /{allPaths=**} {
      allow read, write: if false
    }
  }
}
